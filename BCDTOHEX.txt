%macro READ 2
	mov rax,0
	mov rdi,0
	mov rsi,%1
	mov rdx,%2
	syscall
%endmacro
%macro WRITE 2
	mov rax,1
	mov rdi,1
	mov rsi,%1
	mov rdx,%2
	syscall
%endmacro
section .data
	msg1 db "Enter the BCD number",10
	len1 equ $-msg1
	msg2 db "The Hex Equivalant : ",10
	len2 equ $-msg2
	
section .bss
	char_buff resb 17
	len resq 1
	choice resb 2
	ans resq 1
	char resb 1
	cnt resb 1
section .text
global _start
_start:
	bcdtohex:
		WRITE msg1,len1
		READ char_buff,17
		dec rax
		mov [len],rax
		mov rbx,00
		mov rsi,char_buff
		mov rcx,[len]
		up3 :mov rax,0Ah
		mul rbx
		mov rbx,rax
		mov rdx,00H
		mov dl,byte[rsi]
		sub dl,30H
		add rbx,rdx
		inc rsi
		dec rcx
		jnz up3
		mov [ans],rbx
		WRITE msg2,len2
		mov rbx,[ans]
		call display
		jmp _start
	exit:
		mov rax,60
		mov rdi,00
		syscall
	
	display:
		mov rsi,char_buff
		mov rcx,16
		up2:rol rbx,04
		mov dl,bl
		and dl,0FH
		cmp dl,09H
		jbe add30
		add dl,07H
		add30:add dl,30H
		mov byte[rsi],dl
		inc rsi
		dec rcx
		jnz up2
		WRITE char_buff,16
		ret
